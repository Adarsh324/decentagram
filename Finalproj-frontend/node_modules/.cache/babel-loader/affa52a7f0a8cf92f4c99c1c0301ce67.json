{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\react\\\\finalProj\\\\Finalproj-frontend\\\\src\\\\pages\\\\testChat\\\\testChat.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./testChat.css\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { testContext } from \"../../context/testContext\";\nimport Web3 from 'web3';\nimport { chatcontractAddress, chatcontractABI } from \"../chat/chatConstants\";\nimport React from \"react\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ChatWindow from \"./chatWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestChat() {\n  _s();\n\n  const [msg, setmsg] = useState();\n  const [addr, setaddr] = useState();\n  const [acs, setacs] = useState([[], {}]);\n  const [chatDisp, setchatDisp] = useState(\"\");\n  let web3 = new Web3(window.ethereum);\n  let chatcontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\n  let {\n    connectedAccount\n  } = useContext(testContext);\n  var accounts = [];\n  var myMap = {};\n  var msgs = {};\n  useEffect(() => {\n    chatcontract.getPastEvents('message', {\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function (err, data) {\n      // console.log(data);\n      let x = data.length;\n\n      for (var n = 0; n < x; n++) {\n        if (data[n].returnValues.from.toLowerCase() === connectedAccount) {\n          if (!myMap[data[n].returnValues.to]) {\n            myMap[data[n].returnValues.to] = true;\n            accounts.push(data[n].returnValues.to);\n            msgs[data[n].returnValues.to] = [[]];\n          }\n\n          msgs[data[n].returnValues.to].push([data[n].returnValues.message, \"snd\"]);\n        }\n\n        if (data[n].returnValues.to.toLowerCase() === connectedAccount) {\n          if (!myMap[data[n].returnValues.from]) {\n            myMap[data[n].returnValues.from] = true;\n            accounts.push(data[n].returnValues.from);\n            msgs[data[n].returnValues.from] = [[]];\n          }\n\n          msgs[data[n].returnValues.from].push([data[n].returnValues.message, \"rec\"]);\n        }\n      }\n\n      setacs([accounts, msgs]);\n    });\n  }, [connectedAccount]);\n\n  function expand(a) {\n    setchatDisp(a);\n  }\n\n  function sendNewMsg() {\n    var message = msg;\n    var address = addr;\n    alert(address + \":\" + message);\n    var date = new Date().toLocaleDateString(\"IN\");\n    var time = new Date().toLocaleTimeString(\"IN\");\n    time = time.split('.');\n    var accurateTime = date + ' ' + time[0] + ':' + time[1];\n    chatcontract.methods.sendMessage(address, message, accurateTime).send({\n      from: connectedAccount\n    }, function (err, transcationHash) {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(\"message sent,trnx hash:\" + transcationHash);\n      }\n    });\n  }\n\n  function addMessages(a) {\n    console.log(\"send messhes\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-outer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Current Ac: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), connectedAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"address\",\n          id: \"address-send\",\n          onChange: e => setaddr(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"message\",\n          id: \"msg-send\",\n          onChange: e => setmsg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 106\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"btn-send\",\n          onClick: sendNewMsg,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"rec-msgs\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 8\n          }, this), acs[0].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"account\",\n            onClick: () => expand(item),\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chat-window\",\n        children: chatDisp === \"\" ? \"Nochats\" : /*#__PURE__*/_jsxDEV(ChatWindow, {\n          parameter: chatDisp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TestChat, \"x14rIdBDMjrqSEO/4HWSClnDB0E=\");\n\n_c = TestChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestChat\");","map":{"version":3,"sources":["D:/dev/react/finalProj/Finalproj-frontend/src/pages/testChat/testChat.jsx"],"names":["useContext","useState","useEffect","testContext","Web3","chatcontractAddress","chatcontractABI","React","Topbar","ChatWindow","TestChat","msg","setmsg","addr","setaddr","acs","setacs","chatDisp","setchatDisp","web3","window","ethereum","chatcontract","eth","Contract","connectedAccount","accounts","myMap","msgs","getPastEvents","fromBlock","toBlock","err","data","x","length","n","returnValues","from","toLowerCase","to","push","message","expand","a","sendNewMsg","address","alert","date","Date","toLocaleDateString","time","toLocaleTimeString","split","accurateTime","methods","sendMessage","send","transcationHash","console","log","addMessages","e","target","value","map","item","index"],"mappings":"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","sourcesContent":["import \"./testChat.css\";\r\nimport { useContext,useState,useEffect } from \"react\";\r\nimport { testContext } from \"../../context/testContext\";\r\nimport Web3 from 'web3';\r\nimport {chatcontractAddress,chatcontractABI} from \"../chat/chatConstants\";\r\nimport React from \"react\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ChatWindow from \"./chatWindow\";\r\n\r\n\r\nexport default function TestChat() {\r\n    const [msg, setmsg] = useState();\r\n    const [addr, setaddr] = useState();\r\n    const [acs, setacs] = useState([[],{}]);\r\n    const [chatDisp, setchatDisp] = useState(\"\");\r\n    \r\n  \r\n    \r\n    \r\n    \r\n    let web3 = new Web3(window.ethereum)\r\n    let chatcontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\r\n       let {\r\n        connectedAccount\r\n      } =  useContext(testContext);\r\n    var accounts=[]; \r\n    var myMap={};\r\n    \r\n    var msgs={};\r\n    useEffect(() => {\r\n         chatcontract.getPastEvents('message', {\r\n            fromBlock: 0,\r\n            toBlock: 'latest',\r\n    \r\n          },function (err, data) {\r\n            // console.log(data);\r\n            let x = data.length;\r\n            for (var n = 0; n < x; n++) {\r\n               \r\n                if(data[n].returnValues.from.toLowerCase()===connectedAccount){\r\n                  if(!myMap[data[n].returnValues.to]){\r\n                    myMap[data[n].returnValues.to]=true;\r\n               \r\n                    accounts.push(data[n].returnValues.to);\r\n                    \r\n                    msgs[data[n].returnValues.to]=[[]];\r\n                    \r\n                  }\r\n                 \r\n                  msgs[data[n].returnValues.to].push([data[n].returnValues.message,\"snd\"]);\r\n                }\r\n              \r\n                if((data[n].returnValues.to.toLowerCase()===connectedAccount)){\r\n                \r\n                   \r\n              if(!myMap[data[n].returnValues.from]){\r\n                \r\n                myMap[data[n].returnValues.from]=true;\r\n               \r\n                    accounts.push(data[n].returnValues.from);\r\n                   \r\n                    msgs[data[n].returnValues.from]=[[]];\r\n                \r\n                   \r\n                \r\n              }\r\n              \r\n              msgs[data[n].returnValues.from].push([data[n].returnValues.message,\"rec\"]);\r\n            }\r\n            }\r\n    \r\n          \r\n            \r\n            setacs([accounts,msgs]);\r\n           \r\n           \r\n            \r\n           \r\n          });\r\n    }, [connectedAccount]);\r\n\r\n    \r\n    function expand(a){\r\n      setchatDisp(a);\r\n\r\n    }\r\n\r\n      function sendNewMsg(){\r\n        var message=msg;\r\n        var address=addr;\r\n        alert(address+\":\"+message);\r\n        var date = new Date().toLocaleDateString(\"IN\");\r\n        var time = new Date().toLocaleTimeString(\"IN\");\r\n        time = time.split('.')\r\n        var accurateTime = date + ' ' + time[0] + ':' + time[1];\r\n\r\n        chatcontract.methods.sendMessage(address, message, accurateTime).send({ from: connectedAccount }, function (err, transcationHash) {\r\n            if (err) {\r\n                console.log(err);\r\n            }\r\n            else{\r\n                console.log(\"message sent,trnx hash:\"+transcationHash);\r\n            }\r\n        });\r\n      }\r\n      function addMessages(a){\r\n        console.log(\"send messhes\");\r\n      }\r\n\r\n    return(<div>\r\n      <Topbar />\r\n      <div class=\"chat-outer\">\r\n        \r\n      <div class=\"chat-list\" >\r\n        <h6>Current Ac: <br />{connectedAccount}</h6>\r\n        <input type=\"text\" placeholder=\"address\" id=\"address-send\" onChange={(e) => setaddr(e.target.value)}/><br/>\r\n        <input type=\"text\" placeholder=\"message\" id=\"msg-send\" onChange={(e) => setmsg(e.target.value)}/><br/>\r\n        <div class=\"btn-send\" onClick={sendNewMsg}>send</div>\r\n\r\n        <h2>Messages</h2>\r\n        <div id=\"rec-msgs\">\r\n       \r\n        {/* <ul>\r\n            \r\n           {acs[0].map((item, index) => (\r\n                    <li key={item}  class=\"account\">{item}  :<br/> <ul>\r\n                          \r\n                            {acs[1][item].map((ms, ii) => (\r\n                    <li key={ii}>{ms}</li>\r\n                ))}\r\n\r\n                        </ul></li>\r\n                ))}\r\n        </ul> */}\r\n\r\n        \r\n       <br />\r\n      \r\n            \r\n           {/* {acs[0].map((item, index) => (\r\n                    <div key={item}  class=\"account\" onClick={()=>expand()}>{item}  \r\n                          <div class={\"messages\"}>\r\n                            {acs[1][item].map((ms, ii) => (\r\n                    <div key={ii} class={ms[1]}>{ms[0]}</div>\r\n                ))}\r\n                \r\n                </div>\r\n                    \r\n                       </div>\r\n                ))} */}\r\n\r\n{acs[0].map((item, index) => (\r\n                    <div key={item}  class=\"account\" onClick={()=>expand(item)}>{item} \r\n                          \r\n                    \r\n                       </div>\r\n                ))}\r\n    \r\n         \r\n\r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"chat-window\">\r\n    {chatDisp===\"\"?\"Nochats\":<ChatWindow parameter={chatDisp}/>}\r\n     </div> \r\n        </div>\r\n    </div>);\r\n}"]},"metadata":{},"sourceType":"module"}