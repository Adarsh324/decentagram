{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\react\\\\finalProj\\\\Finalproj-frontend\\\\src\\\\pages\\\\testChat\\\\chatWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { chatcontractAddress, chatcontractABI } from \"../chat/chatConstants\";\nimport \"./chatWindow.css\";\nimport { testContext } from \"../../context/testContext\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatWindow(props) {\n  _s();\n\n  const {\n    parameter\n  } = props;\n  const [msg, setmsg] = useState([]);\n  let web3 = new Web3(window.ethereum);\n  let chatcontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\n  let {\n    connectedAccount\n  } = useContext(testContext);\n  useEffect(() => {\n    chatcontract.getPastEvents('message', {\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function (err, data) {\n      var msgs = [];\n      let x = data.length;\n\n      for (var n = 0; n < x; n++) {\n        if (data[n].returnValues.to.toLowerCase() === connectedAccount) {\n          if (data[n].returnValues.from.toLowerCase() === parameter.toLowerCase()) {\n            msgs.push([data[n].returnValues.message, \"rec\"]); // rec\n          }\n        }\n\n        if (data[n].returnValues.to.toLowerCase() === parameter.toLowerCase()) {\n          if (data[n].returnValues.from.toLowerCase() === connectedAccount) {\n            msgs.push([data[n].returnValues.message, \"snd\"]); //send\n          }\n        }\n      }\n\n      setmsg(msgs);\n    });\n  }, [parameter]);\n\n  function sendMessage() {\n    var message = msg;\n    var address = parameter;\n    var date = new Date().toLocaleDateString(\"IN\");\n    var time = new Date().toLocaleTimeString(\"IN\");\n    time = time.split('.');\n    var accurateTime = date + ' ' + time[0] + ':' + time[1];\n    chatcontract.methods.sendMessage(address, message, accurateTime).send({\n      from: connectedAccount\n    }, function (err, transcationHash) {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(\"message sent,trnx hash:\" + transcationHash);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [parameter, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'end',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"messages\",\n        children: msg.map((ms, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: ms[1],\n          children: [ms[0], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"msg-send-box\",\n          onChange: e => setmsg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"msg-send-btn\",\n          onClick: () => sendMessage(),\n          children: \" Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatWindow, \"1SbxQu9YKM32dGNEDNcMl+iLQOI=\");\n\n_c = ChatWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"sources":["D:/dev/react/finalProj/Finalproj-frontend/src/pages/testChat/chatWindow.jsx"],"names":["useState","useContext","useEffect","chatcontractAddress","chatcontractABI","testContext","Web3","ChatWindow","props","parameter","msg","setmsg","web3","window","ethereum","chatcontract","eth","Contract","connectedAccount","getPastEvents","fromBlock","toBlock","err","data","msgs","x","length","n","returnValues","to","toLowerCase","from","push","message","sendMessage","address","date","Date","toLocaleDateString","time","toLocaleTimeString","split","accurateTime","methods","send","transcationHash","console","log","display","flexDirection","justifyContent","height","map","ms","i","e","target","value"],"mappings":"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","sourcesContent":["import {useState,useContext,useEffect} from \"react\";\r\nimport {chatcontractAddress,chatcontractABI} from \"../chat/chatConstants\";\r\nimport \"./chatWindow.css\"\r\nimport { testContext } from \"../../context/testContext\";\r\nimport Web3 from 'web3';\r\nexport default function ChatWindow(props){\r\n    const { parameter  } = props;\r\n    \r\n    \r\n  const [msg, setmsg] = useState([]);\r\n  \r\n  let web3 = new Web3(window.ethereum)\r\n  let chatcontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\r\n     let {\r\n      connectedAccount\r\n    } =  useContext(testContext);\r\n\r\n   \r\n   \r\n    useEffect(() => {\r\n         chatcontract.getPastEvents('message', {\r\n            fromBlock: 0,\r\n            toBlock: 'latest',\r\n    \r\n          },function (err, data) {\r\n            var msgs=[];\r\n            let x = data.length;\r\n            for (var n = 0; n < x; n++) {\r\n                \r\n                if(data[n].returnValues.to.toLowerCase()===connectedAccount){\r\n                 \r\n                    if(data[n].returnValues.from.toLowerCase()===parameter.toLowerCase()){\r\n                        \r\n                        msgs.push([data[n].returnValues.message,\"rec\"]);\r\n                        // rec\r\n                    }\r\n\r\n                }\r\n                if(data[n].returnValues.to.toLowerCase()===parameter.toLowerCase()){\r\n                    if(data[n].returnValues.from.toLowerCase()===connectedAccount){\r\n                        msgs.push([data[n].returnValues.message,\"snd\"]);\r\n                        //send\r\n                    }\r\n\r\n                }\r\n            }\r\n           \r\n             setmsg(msgs);\r\n          \r\n          });\r\n    }, [parameter]);\r\n\r\n \r\n  function sendMessage(){\r\n    var message=msg;\r\n    var address=parameter ;\r\n    var date = new Date().toLocaleDateString(\"IN\");\r\n    var time = new Date().toLocaleTimeString(\"IN\");\r\n    time = time.split('.')\r\n    var accurateTime = date + ' ' + time[0] + ':' + time[1];\r\n    \r\n    chatcontract.methods.sendMessage(address, message, accurateTime).send({ from: connectedAccount }, function (err, transcationHash) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else{\r\n            console.log(\"message sent,trnx hash:\"+transcationHash);\r\n        }\r\n    });\r\n  }\r\n\r\n\r\n    return(\r\n        <div style={{ display: 'flex'}}>\r\n            {parameter }\r\n    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'end', height: '100%' }}>\r\n  \r\n                    \r\n        <div class=\"messages\">\r\n             {msg.map((ms,i)=>(<div class={ms[1]}>{ms[0]} <br /></div>))}\r\n        </div>\r\n\r\n\r\n        <div style={{display:\"flex\"}}>\r\n        <input type=\"text\" class=\"msg-send-box\" onChange={(e)=>setmsg(e.target.value)}  /> \r\n        <div class=\"msg-send-btn\" onClick={()=>sendMessage()}> Send</div> \r\n        </div>\r\n             \r\n    </div></div>);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}