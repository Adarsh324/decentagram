{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\react\\\\finalProj\\\\Finalproj-frontend\\\\src\\\\pages\\\\chat\\\\newChat.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./newChat.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport React, { useContext } from \"react\";\nimport { chatcontractAddress, chatcontractABI } from \"./chatConstants\";\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nimport web3Connection from \"../../web3Connection\";\nimport { testContext } from \"../../context/testContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewChat() {\n  _s();\n\n  let web3 = new Web3(window.ethereum);\n  let chatcontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\n  const {\n    connectedAccount\n  } = useContext(testContext);\n  var myMap = {};\n  var accounts = [];\n  chatcontract.getPastEvents('message', {\n    fromBlock: 0,\n    toBlock: 'latest'\n  }, function (err, data) {\n    console.log(data); // let x = data.length;\n    // for (var n = 0; n < x; n++) {\n    //   if(!myMap[data[n].returnValues.from]){\n    //     // myMap.set(data[n].returnValues.from, true);\n    //     myMap[data[n].returnValues.from]=true;\n    //     accounts.push(data[n].returnValues.from);\n    //   }\n    // }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: accounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"address\",\n      id: \"address-send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 75\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"message\",\n      id: \"msg-send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendNewMsg(),\n      children: \"Send \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_s(NewChat, \"kyw9EfvXcAPLr1dWqdGkBxxvUwQ=\");\n\n_c = NewChat;\nexport default NewChat;\n\nconst sendNewMsg = () => {\n  console.log(\"sending msgs\");\n  var message = document.getElementById(\"msg-send\");\n  var to = document.getElementById(\"address-send\");\n  console.log(message, to); //   const {ethereum}=window;\n  //   const provider =new ethers.providers.Web3Provider(ethereum);\n  // const signer=provider.getSigner();\n  // const mycontract= new ethers.Contract(contractAddress,contractABI,signer);\n  // let web3 = new Web3(window.ethereum);\n  //   // let web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"));\n  //  let mycontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\n  //   var date = new Date().toLocaleDateString(\"IN\");\n  //   var time = new Date().toLocaleTimeString(\"IN\");\n  //   time = time.split('.')\n  //   var accurateTime = date + ' ' + time[0] + ':' + time[1];\n  //   mycontract.methods.sendMessage(to, message, accurateTime).send({ from: connectedAccount }, function (err, transcationHash) {\n  //     if (err) {\n  //       console.log(err);\n  //     }\n  //     else {\n  //       var decoration = '<div class=\"row justify-content-start\">' +\n  //         '<div class=\"col-4 col-md-auto\">' +\n  //         '<div class=\"alert alert-primary\" role=\"alert\">' +\n  //         message +\n  //         '<h6 style=\"font-size: 0.6em;\">send ' + accurateTime + '</h6>' +\n  //         '</div>' +\n  //         '</div>' +\n  //         '</div>'\n  //       var buttonText = document.getElementById(\"groupinputbutton\" + to).innerHTML;\n  //       document.getElementById(\"groupinputbutton\" + to).remove();\n  //       //document.getElementById(\"button\"+det.id).remove();\n  //       document.getElementById(\"messagepart\" + to).innerHTML += decoration;\n  //       document.getElementById(\"messagepart\" + to).innerHTML += '<div class=\"input-group mb-0\" id=\"groupinputbutton' + to + '\">' +\n  //         '<input type=\"text\" class=\"form-control\" placeholder=\"Type message\" id=\"inputbutton' + to + '\"aria-label=\"Recipien username\" aria-describedby=\"button-addon2\" />' +\n  //         '<button class=\"btn btn-warning\" type=\"button\" onclick=onSend(this) id=\"button' + to + '\" style=\"padding-top: .55rem;\">' +\n  //         'Send' +\n  //         '</button>' +\n  //         '</div>'\n  //       document.getElementById(\"groupinputbutton\" + to).scrollIntoView();\n  //     }\n  //   });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NewChat\");","map":{"version":3,"sources":["D:/dev/react/finalProj/Finalproj-frontend/src/pages/chat/newChat.jsx"],"names":["Topbar","React","useContext","chatcontractAddress","chatcontractABI","ethers","Web3","web3Connection","testContext","NewChat","web3","window","ethereum","chatcontract","eth","Contract","connectedAccount","myMap","accounts","getPastEvents","fromBlock","toBlock","err","data","console","log","sendNewMsg","message","document","getElementById","to"],"mappings":";;;AAAA,OAAO,eAAP;AACA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,mBAAR,EAA4BC,eAA5B,QAAkD,iBAAlD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAIA,SAASC,OAAT,GAAkB;AAAA;;AAEZ,MAAIC,IAAI,GAAG,IAAIJ,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAX;AACC,MAAIC,YAAY,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBX,eAAtB,EAAuCD,mBAAvC,CAAnB;AACA,QAAM;AACLa,IAAAA;AADK,MAEFd,UAAU,CAACM,WAAD,CAFd;AAGH,MAAIS,KAAK,GAAG,EAAZ;AACE,MAAIC,QAAQ,GAAC,EAAb;AACAL,EAAAA,YAAY,CAACM,aAAb,CAA2B,SAA3B,EAAsC;AACpCC,IAAAA,SAAS,EAAE,CADyB;AAEpCC,IAAAA,OAAO,EAAE;AAF2B,GAAtC,EAIG,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACD,GAhBD;AAqBF,sBAAQ;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,SAA/B;AAAyC,MAAA,EAAE,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAJF,eAI8D;AAAA;AAAA;AAAA;AAAA,YAJ9D,eAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,SAA/B;AAAyC,MAAA,EAAE,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YALF,eAK0D;AAAA;AAAA;AAAA;AAAA,YAL1D,eAQV;AAAS,MAAA,OAAO,EAAEQ,UAAU,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARU;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAaH;;GA3CQjB,O;;KAAAA,O;AA6CT,eAAeA,OAAf;;AACA,MAAOiB,UAAU,GAAC,MAAI;AAEpBF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,MAAIE,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAd;AACE,MAAIC,EAAE,GAAGF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ,EAAoBG,EAApB,EALkB,CAMpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAED,CA/CD","sourcesContent":["import \"./newChat.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport React,{useContext} from \"react\";\r\nimport {chatcontractAddress,chatcontractABI} from \"./chatConstants\";\r\nimport { ethers } from 'ethers';\r\nimport Web3 from 'web3';\r\nimport web3Connection from \"../../web3Connection\";\r\nimport { testContext } from \"../../context/testContext\";\r\n\r\n\r\n\r\nfunction NewChat(){\r\n\r\n      let web3 = new Web3(window.ethereum)\r\n       let chatcontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\r\n       const {\r\n        connectedAccount\r\n      } =  useContext(testContext);\r\n    var myMap = {};\r\n      var accounts=[]; \r\n      chatcontract.getPastEvents('message', {\r\n        fromBlock: 0,\r\n        toBlock: 'latest',\r\n\r\n      }, function (err, data) {\r\n        console.log(data);\r\n        // let x = data.length;\r\n        // for (var n = 0; n < x; n++) {\r\n        //   if(!myMap[data[n].returnValues.from]){\r\n        //     // myMap.set(data[n].returnValues.from, true);\r\n        //     myMap[data[n].returnValues.from]=true;\r\n        //     accounts.push(data[n].returnValues.from);\r\n        //   }\r\n        \r\n       \r\n        // }\r\n      });\r\n\r\n      \r\n\r\n\r\n    return (<div>\r\n              <Topbar />\r\n              <h1>{accounts}</h1>\r\n            \r\n              <input type=\"text\" placeholder=\"address\" id=\"address-send\"/><br/>\r\n              <input type=\"text\" placeholder=\"message\" id=\"msg-send\"/><br/>\r\n              \r\n\r\n  <button  onClick={sendNewMsg()}>Send </button>\r\n           \r\n             \r\n            </div>\r\n            );\r\n}\r\n\r\nexport default NewChat;\r\nconst  sendNewMsg=()=>{\r\n\r\n  console.log(\"sending msgs\");\r\n  var message = document.getElementById(\"msg-send\");\r\n    var to = document.getElementById(\"address-send\");\r\n    console.log(message,to);\r\n  //   const {ethereum}=window;\r\n  //   const provider =new ethers.providers.Web3Provider(ethereum);\r\n  // const signer=provider.getSigner();\r\n  // const mycontract= new ethers.Contract(contractAddress,contractABI,signer);\r\n  // let web3 = new Web3(window.ethereum);\r\n  //   // let web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"));\r\n  //  let mycontract = new web3.eth.Contract(chatcontractABI, chatcontractAddress);\r\n  //   var date = new Date().toLocaleDateString(\"IN\");\r\n  //   var time = new Date().toLocaleTimeString(\"IN\");\r\n  //   time = time.split('.')\r\n  //   var accurateTime = date + ' ' + time[0] + ':' + time[1];\r\n\r\n  //   mycontract.methods.sendMessage(to, message, accurateTime).send({ from: connectedAccount }, function (err, transcationHash) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     }\r\n  //     else {\r\n\r\n  //       var decoration = '<div class=\"row justify-content-start\">' +\r\n  //         '<div class=\"col-4 col-md-auto\">' +\r\n  //         '<div class=\"alert alert-primary\" role=\"alert\">' +\r\n  //         message +\r\n  //         '<h6 style=\"font-size: 0.6em;\">send ' + accurateTime + '</h6>' +\r\n  //         '</div>' +\r\n  //         '</div>' +\r\n  //         '</div>'\r\n  //       var buttonText = document.getElementById(\"groupinputbutton\" + to).innerHTML;\r\n  //       document.getElementById(\"groupinputbutton\" + to).remove();\r\n  //       //document.getElementById(\"button\"+det.id).remove();\r\n  //       document.getElementById(\"messagepart\" + to).innerHTML += decoration;\r\n  //       document.getElementById(\"messagepart\" + to).innerHTML += '<div class=\"input-group mb-0\" id=\"groupinputbutton' + to + '\">' +\r\n  //         '<input type=\"text\" class=\"form-control\" placeholder=\"Type message\" id=\"inputbutton' + to + '\"aria-label=\"Recipien username\" aria-describedby=\"button-addon2\" />' +\r\n  //         '<button class=\"btn btn-warning\" type=\"button\" onclick=onSend(this) id=\"button' + to + '\" style=\"padding-top: .55rem;\">' +\r\n  //         'Send' +\r\n  //         '</button>' +\r\n  //         '</div>'\r\n  //       document.getElementById(\"groupinputbutton\" + to).scrollIntoView();\r\n\r\n  //     }\r\n  //   });\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}